第一章：基础知识复习
1. / 的返回值是float， //返回值是int
2. Built-in Atomic Data Types （int / float / bool ）
3. collection data types
4. 所有python序列数据都可以使用的方法（[]，+，*, len(), in,[:] ）
5. list-[, ],可变对象，异构（可包含不同数据类型）,有序。10可使用的方法（/.append(items) /.insert(i,items) /.pop() /.pop(i)
        /del alist[i] /.remove(items),return none /.sort(),return none /.reverse(),return none
        /.count(items) /.index(items) /.copy(),深拷贝
6.string，不可变对象，有序。8可使用的方法 /.lower() /.upper() /.split(an element) /.center(len) /.ljust(len) /.rjust(len)
        /.count(items) /.find(items)-第一次出现时候的下标
7. tuple-（， ）,不可变对象，异构，有序。
8. set-{, },异构，无重复对象，无序，可变（）储存的对象均不可变，相当于dict的key，但不储存value。
        6支持的运算 /in /len() /a|b,合集 /a&b 交集 /a-b，差集， /a<=b,a中的元素是否都在b
        8提供的方法. /.union(otherset),合集 /.intersection(otherset)，交集 /.difference(otherset)，差集
        /.issubset(otherset) /.add(items) /.remove(items) /.pop(),随机一个 /.clear()清空
9. dict-{key:value, }-可变对象，但key为不可变对象，不可重复，无序。
        支持的运算：/adict[key] /del adict[key] /key in dict
        methods: /.keys() /.values() /.items() 都可用list（）列出
                /.get(key),key不存在，返回None /.(key,alt)，key不存在，返回alt
10.set的原理和dict一样，所以，同样不可以放入可变对象，因为无法判断两个可变对象是否相等，也就无法保证set内部“不会有重复元素”
11.print,sep默认为空格，end默认为换行符
    print('hello','world',sep='~~',end='!!')
12.格式化字符串
    /d,i-整数。/f,e,E-默认六位小数。 /g,指数<-4,>5使用e，否则使用f。 /c,单个字符。 /s字符串
    /20d，20个字符长度。 /-20d，左对齐 /+20d，右对齐 /020d，长20，补齐0 /20.3f，
    format
13.for/while/if
14.alist=[x*x for x in range(1,11) if x%2 ==0]


15. The first method that all classes should provide is the constructor（__init__）. The constructor defines the
    way in which data objects are created.
第三章--基本数据结构：
1. Stack，只能对顶端元素操作。基本method-- /.pop() /.peek() /.push(item) /.size() /.isEmpty() /a=Stack() //Stack可以简单的用
    list表示
2. 括号匹配问题：三个出错原因---左括号多，右括号多，顶端括号不匹配，方法一：Stack（）解决 （from pythonds.basic import Stack）
3. 进制转换：采用除以base的方案，第一个余数是转换后的最后一个。方案一：Stack（）解决。
4. 中序到后序表达式
    1.参数顺序排列(用list即可).
        str.split(), 默认为以空格分隔str，可以多个空格，输出为list
        ‘ ’.join(sequence), 将一个sequence变成str，此处为空格链接
    2.操作符和括号压入stack的过程：
        1.最基础的：遇到右括号，将内部的操作符放入参数所在list
        2.省略操作符的情况：
            前方有优先级更高的操作符（即有默认小括号），先将该操作符取出，再压入。
            前方为空，直接压入
    3.最后可能有剩余操作符，最后取出即可。
